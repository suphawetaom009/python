{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2c619e5f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "=== เมนูจัดการร้าน Pizza ===\n",
      "1. เพิ่มพิซซ่า\n",
      "2. แสดงรายการพิซซ่า\n",
      "3. อัปเดตราคา\n",
      "4. อัปเดตขนาด\n",
      "5. ลบพิซซ่าจากชื่อ\n",
      "6. เรียงลำดับพิซซ่า (A-Z)\n",
      "7. เรียงย้อนกลับ (Z-A)\n",
      "8. ค้นหาพิซซ่า\n",
      "9. ลบพิซซ่าทั้งหมด\n",
      "0. ออกจากโปรแกรม\n"
     ]
    }
   ],
   "source": [
    "# ----------------- Pizza Class -----------------\n",
    "class Pizza:\n",
    "    def __init__(self, name, size, price):\n",
    "        self.name = name\n",
    "        self.size = size\n",
    "        self.price = price\n",
    "\n",
    "    def get_info(self):\n",
    "        return f\"{self.name} - {self.size} - {self.price} Baht\"\n",
    "\n",
    "    def update_price(self, price):\n",
    "        self.price = price\n",
    "\n",
    "    def update_size(self, size):\n",
    "        self.size = size\n",
    "\n",
    "\n",
    "# ----------------- PizzaShop Class -----------------\n",
    "class PizzaShop:\n",
    "    def __init__(self):\n",
    "        self.pizzas = []\n",
    "\n",
    "    def add_pizza(self, pizza):\n",
    "        self.pizzas.append(pizza)\n",
    "\n",
    "    def remove_pizza(self, name):\n",
    "        for pizza in self.pizzas:\n",
    "            if pizza.name.lower() == name.lower():\n",
    "                self.pizzas.remove(pizza)\n",
    "                print(f\"ลบ {name} เรียบร้อยแล้ว\")\n",
    "                return\n",
    "        print(f\"ไม่พบพิซซ่าชื่อ {name}\")\n",
    "\n",
    "    def find_pizza(self, name):\n",
    "        for i, pizza in enumerate(self.pizzas):\n",
    "            if pizza.name.lower() == name.lower():\n",
    "                return i\n",
    "        return -1\n",
    "\n",
    "    def sort_pizzas(self):\n",
    "        self.pizzas.sort(key=lambda p: p.name)\n",
    "\n",
    "    def reverse_pizzas(self):\n",
    "        self.pizzas.reverse()\n",
    "\n",
    "    def clear_all(self):\n",
    "        self.pizzas.clear()\n",
    "\n",
    "    def show_pizzas(self):\n",
    "        if not self.pizzas:\n",
    "            print(\"ไม่มีพิซซ่าในร้าน\")\n",
    "        else:\n",
    "            for i, p in enumerate(self.pizzas):\n",
    "                print(f\"{i}. {p.get_info()}\")\n",
    "\n",
    "\n",
    "# ----------------- Main Menu -----------------\n",
    "def main_menu():\n",
    "    shop = PizzaShop()\n",
    "\n",
    "    while True:\n",
    "        print(\"\\n=== เมนูจัดการร้าน Pizza ===\")\n",
    "        print(\"1. เพิ่มพิซซ่า\")\n",
    "        print(\"2. แสดงรายการพิซซ่า\")\n",
    "        print(\"3. อัปเดตราคา\")\n",
    "        print(\"4. อัปเดตขนาด\")\n",
    "        print(\"5. ลบพิซซ่าจากชื่อ\")\n",
    "        print(\"6. เรียงลำดับพิซซ่า (A-Z)\")\n",
    "        print(\"7. เรียงย้อนกลับ (Z-A)\")\n",
    "        print(\"8. ค้นหาพิซซ่า\")\n",
    "        print(\"9. ลบพิซซ่าทั้งหมด\")\n",
    "        print(\"0. ออกจากโปรแกรม\")\n",
    "\n",
    "        choice = input(\"เลือกเมนู (0-9): \")\n",
    "\n",
    "        if choice == \"1\":\n",
    "            name = input(\"ชื่อพิซซ่า: \")\n",
    "            size = input(\"ขนาด (Small, Medium, Large): \")\n",
    "            price = int(input(\"ราคา: \"))\n",
    "            shop.add_pizza(Pizza(name, size, price))\n",
    "            print(\"เพิ่มพิซซ่าเรียบร้อย\")\n",
    "\n",
    "        elif choice == \"2\":\n",
    "            print(\"\\n--- รายการพิซซ่า ---\")\n",
    "            shop.show_pizzas()\n",
    "\n",
    "        elif choice == \"3\":\n",
    "            shop.show_pizzas()\n",
    "            index = int(input(\"เลือกเลขพิซซ่าที่จะอัปเดตราคา: \"))\n",
    "            if 0 <= index < len(shop.pizzas):\n",
    "                new_price = int(input(\"ราคาที่ต้องการเปลี่ยน: \"))\n",
    "                shop.pizzas[index].update_price(new_price)\n",
    "                print(\"อัปเดตราคาเรียบร้อย\")\n",
    "            else:\n",
    "                print(\"เลขไม่ถูกต้อง\")\n",
    "\n",
    "        elif choice == \"4\":\n",
    "            shop.show_pizzas()\n",
    "            index = int(input(\"เลือกเลขพิซซ่าที่จะอัปเดตขนาด: \"))\n",
    "            if 0 <= index < len(shop.pizzas):\n",
    "                new_size = input(\"ขนาดใหม่ (Small, Medium, Large): \")\n",
    "                shop.pizzas[index].update_size(new_size)\n",
    "                print(\"อัปเดตขนาดเรียบร้อย\")\n",
    "            else:\n",
    "                print(\"เลขไม่ถูกต้อง\")\n",
    "\n",
    "        elif choice == \"5\":\n",
    "            name = input(\"กรอกชื่อพิซซ่าที่จะลบ: \")\n",
    "            shop.remove_pizza(name)\n",
    "\n",
    "        elif choice == \"6\":\n",
    "            shop.sort_pizzas()\n",
    "            print(\"เรียงพิซซ่าตามชื่อเรียบร้อยแล้ว\")\n",
    "\n",
    "        elif choice == \"7\":\n",
    "            shop.reverse_pizzas()\n",
    "            print(\"เรียงพิซซ่าแบบย้อนกลับเรียบร้อยแล้ว\")\n",
    "\n",
    "        elif choice == \"8\":\n",
    "            name = input(\"ชื่อพิซซ่าที่ต้องการค้นหา: \")\n",
    "            index = shop.find_pizza(name)\n",
    "            if index != -1:\n",
    "                print(f\"พบ {name} ที่ตำแหน่ง {index}\")\n",
    "                print(shop.pizzas[index].get_info())\n",
    "            else:\n",
    "                print(f\"ไม่พบพิซซ่าชื่อ {name}\")\n",
    "\n",
    "        elif choice == \"9\":\n",
    "            confirm = input(\"แน่ใจหรือไม่ว่าต้องการลบทั้งหมด? (yes/no): \")\n",
    "            if confirm.lower() == \"yes\":\n",
    "                shop.clear_all()\n",
    "                print(\"ลบพิซ่าทั้งหมดแล้ว\")\n",
    "\n",
    "        elif choice == \"0\":\n",
    "            print(\"ออกจากโปรแกรม...\")\n",
    "            break\n",
    "\n",
    "        else:\n",
    "            print(\"กรุณาเลือกหมายเลข 0-9 เท่านั้น\")\n",
    "\n",
    "\n",
    "# ----------------- Run -----------------\n",
    "if __name__ == \"__main__\":\n",
    "    main_menu()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
